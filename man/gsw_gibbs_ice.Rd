% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gsw.R
\name{gsw_gibbs_ice}
\alias{gsw_gibbs_ice}
\title{Gibbs Energy of Ice, and its Derivatives}
\usage{
gsw_gibbs_ice(nt, np, t, p = 0)
}
\arguments{
\item{nt}{An integer, the order of the \code{t} derivative. Must be 0, 1, or 2.}

\item{np}{An integer, the order of the \code{p} derivative. Must be 0, 1, or 2.}

\item{t}{in-situ temperature (ITS-90) [ degC ]}

\item{p}{sea pressure [dbar], i.e. absolute pressure [dbar] minus 10.1325 dbar}
}
\value{
Gibbs energy [ J/kg ] if \code{ns}=\code{nt}=\code{np}=0. Derivative of energy
with respect to \code{t} [ J/kg/(degC)^nt ] if \code{nt} is nonzero,
etc. Note that derivatives with respect to pressure are in units with Pa, not dbar.
}
\description{
Gibbs Energy of Ice, and its Derivatives
}
\section{Implementation Note}{

This R function uses a wrapper to a C function
contained within the GSW-C system as updated 2021-03-27
at \url{https://github.com/TEOS-10/GSW-C}
with git commit `f7bfebf44f686034636facb09852f1d5760c27f5`.
In turn, that C function uses data from the
\code{library/gsw_data_v3_0.mat}
file provided in the GSW-Matlab source code, version 3.06-11.
Unfortunately, this version is no longer displayed on the
TEOS-10.org website. Therefore, in the interests of making
GSW-R be self-contained, a copy was downloaded from
\url{http://www.teos-10.org/software/gsw_matlab_v3_06_11.zip}
on 2021-0706, the .mat file was stored in
the developer/create_data directory of
\url{https://github.com/TEOS-10/GSW-R}, and then the dataset
used in GSW-R was created based on that .mat file.
Please consult \url{http://www.teos-10.org} to learn more about
the various TEOS-10 software systems.
}

\section{Caution}{

The TEOS-10 webpage for \code{gsw_gibbs_ice} does not provide test values, so
the present R version should be considered untested.
}

\examples{
library(gsw)
p <- seq(0, 100, 1)
t <- rep(-5, length(p))
## Check the derivative wrt pressure. Note the unit change
E <- gsw_gibbs_ice(0, 0, t, p)
# Estimate derivative from linear fit (try plotting: it is very linear)
m <- lm(E ~ p)
print(summary(m))
plot(p, E)
abline(m)
dEdp1 <- coef(m)[2]
# Calculate derivative ... note we multiply by 1e4 to get from 1/Pa to 1/dbar
dEdp2 <- 1e4 * gsw_gibbs_ice(0, 1, t[1], p[1])
## Ratio
dEdp1 / dEdp2
}
\references{
\url{http://www.teos-10.org/pubs/gsw/html/gsw_gibbs_ice.html}
}
