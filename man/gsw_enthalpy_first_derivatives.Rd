% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gsw.R
\name{gsw_enthalpy_first_derivatives}
\alias{gsw_enthalpy_first_derivatives}
\title{First Derivatives of Enthalpy}
\usage{
gsw_enthalpy_first_derivatives(SA, CT, p)
}
\arguments{
\item{SA}{Absolute Salinity [ g/kg ]}

\item{CT}{Conservative Temperature [ degC ]}

\item{p}{sea pressure [dbar], i.e. absolute pressure [dbar] minus 10.1325 dbar}
}
\value{
a list containing \code{h_SA} [ (J/kg)/(g/kg) ], the derivative
of enthalpy wrt Absolute Salinity, and \code{h_CT} [ (J/kg)/degC ],
the derivative of enthalpy wrt Conservative Temperature.
}
\description{
First Derivatives of Enthalpy
}
\details{
The present R function works with a wrapper to a C function contained
within the GSW-C system (with source code at
\url{https://github.com/TEOS-10/GSW-C}), which
in turn is based on the GSW-Fortran system (\url{https://github.com/TEOS-10/GSW-Fortran})
which in turn is based on the GSW-Matlab system (\url{https://github.com/TEOS-10/GSW-Matlab}).
To learn more about these software systems, their authorships, and the science behind
it all, please consult \url{http://www.teos-10.org}.
}
\section{Bugs}{

The HTML documentation suggests that this function returns 3 values, but
there are only 2 returned values in the C code used here (and the matlab code
on which that is based). Also, the d/dSA check values given the HTML are not
reproduced by the present function. This was reported on Mar 18, 2017
as https://github.com/TEOS-10/GSW-Matlab/issues/7.
See https://github.com/TEOS-10/GSW-R/issues/33


The test values on the Matlab documentation webpage fail with this R function.
See https://github.com/TEOS-10/GSW-R/issues/28
}

\examples{
library(testthat)
SA <- c(34.7118, 34.8915, 35.0256, 34.8472, 34.7366, 34.7324)
CT <- c(28.7856, 28.4329, 22.8103, 10.2600,  6.8863,  4.4036)
p <-  c(     10,      50,     125,     250,     600,    1000)
d <- gsw_enthalpy_first_derivatives(SA, CT, p)
\dontrun{ # I think the HTML is wrong ... it also says the function returns 3 things, not 2.
expect_equal(d$h_SA, c(-0.070175858133742, -0.350930227941697, -0.886796332314973,
                     -1.829592995957160, -4.423460664577400, -7.405099527558439))
}
expect_equal(d$h_CT/1e3, c(3.991899705530481, 3.992025640520101, 3.992210365030743,
                         3.992284150250490, 3.992685389122658, 3.993014168534175))
}
\references{
\url{http://www.teos-10.org/pubs/gsw/html/gsw_enthalpy_first_derivatives.html}
}
\seealso{
Other things related to enthalpy: \code{\link{gsw_CT_from_enthalpy}},
  \code{\link{gsw_dynamic_enthalpy}},
  \code{\link{gsw_enthalpy_CT_exact}},
  \code{\link{gsw_enthalpy_diff}},
  \code{\link{gsw_enthalpy_first_derivatives_CT_exact}},
  \code{\link{gsw_enthalpy_ice}},
  \code{\link{gsw_enthalpy_t_exact}},
  \code{\link{gsw_enthalpy}},
  \code{\link{gsw_frazil_properties_potential_poly}},
  \code{\link{gsw_frazil_properties_potential}},
  \code{\link{gsw_pot_enthalpy_from_pt_ice_poly}},
  \code{\link{gsw_pot_enthalpy_from_pt_ice}},
  \code{\link{gsw_pot_enthalpy_ice_freezing_poly}},
  \code{\link{gsw_pot_enthalpy_ice_freezing}},
  \code{\link{gsw_pt_from_pot_enthalpy_ice_poly}},
  \code{\link{gsw_pt_from_pot_enthalpy_ice}},
  \code{\link{gsw_specvol_first_derivatives_wrt_enthalpy}},
  \code{\link{gsw_specvol_first_derivatives}}
}
